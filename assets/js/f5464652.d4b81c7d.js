"use strict";(self.webpackChunktht_doc=self.webpackChunktht_doc||[]).push([[769],{58:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=t(4848),n=t(8453);const s={},r="Data layer",o={id:"Developer-Guide/Layers/Data",title:"Data layer",description:"The data layer is responsible for managing the storage, retrieval, and manipulation of data, and it is specifically designed to interact with PostgreSQL using Hibernate. Hibernate acts as an Object-Relational Mapping (ORM) framework, providing a bridge between the Java application and the relational database. This allows developers to work with Java objects in the code, while Hibernate transparently handles the conversion and persistence of these objects in the PostgreSQL database.",source:"@site/docs/Developer-Guide/Layers/Data.mdx",sourceDirName:"Developer-Guide/Layers",slug:"/Developer-Guide/Layers/Data",permalink:"/ohie-test-harness/docs/Developer-Guide/Layers/Data",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Business Logic Tier",permalink:"/ohie-test-harness/docs/Developer-Guide/Layers/Buisness-Logic-Tier"},next:{title:"Entity-Relationship Diagram (ERD)",permalink:"/ohie-test-harness/docs/Developer-Guide/ERD"}},l={},d=[];function c(e){const a={h1:"h1",p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"data-layer",children:"Data layer"}),"\n",(0,i.jsx)(a.p,{children:"The data layer is responsible for managing the storage, retrieval, and manipulation of data, and it is specifically designed to interact with PostgreSQL using Hibernate. Hibernate acts as an Object-Relational Mapping (ORM) framework, providing a bridge between the Java application and the relational database. This allows developers to work with Java objects in the code, while Hibernate transparently handles the conversion and persistence of these objects in the PostgreSQL database."}),"\n",(0,i.jsx)(a.p,{children:"One advantage of using Hibernate lies in its ability to abstract the underlying database details, promoting a consistent and simplified approach to database interactions. This abstraction enhances code portability, making it easier to transition the application to a different database system in the future. Additionally, Hibernate simplifies complex SQL queries and database operations, reducing the amount of boilerplate code and providing a more streamlined development process."}),"\n",(0,i.jsx)(a.p,{children:"PostgreSQL, as the chosen relational database management system, brings its own set of advantages. It is known for its robustness, extensibility, and support for complex data types and queries. The combination of PostgreSQL and Hibernate in the data layer ensures efficient and reliable data management, offering a solid foundation for the overall system architecture. This approach allows for a scalable and maintainable solution, facilitating future updates or changes in the database technology without significant impact on the rest of the application."})]})}function p(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);