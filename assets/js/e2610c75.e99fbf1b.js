"use strict";(self.webpackChunktht_doc=self.webpackChunktht_doc||[]).push([[646],{1654:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=t(4848),r=t(8453);const i={},s="Front-end (Presentation Layer)",o={id:"Developer-Guide/Layers/Frontend",title:"Front-end (Presentation Layer)",description:"The front end is responsible for handling the user interface and user experience. We are adopting a modern and efficient approach to front-end development using React, a popular JavaScript library for building user interfaces. React follows a component-based architecture, providing a more modular and scalable solution.",source:"@site/docs/Developer-Guide/Layers/Frontend.mdx",sourceDirName:"Developer-Guide/Layers",slug:"/Developer-Guide/Layers/Frontend",permalink:"/ohie-test-harness/docs/Developer-Guide/Layers/Frontend",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Technology Stack",permalink:"/ohie-test-harness/docs/Developer-Guide/Technology-Stack"},next:{title:"Authentication Layer",permalink:"/ohie-test-harness/docs/Developer-Guide/Layers/Authentication"}},d={},c=[{value:"Advantages of using React for Front-end",id:"advantages-of-using-react-for-front-end",level:2}];function l(e){const n={h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"front-end-presentation-layer",children:"Front-end (Presentation Layer)"}),"\n",(0,a.jsx)(n.p,{children:"The front end is responsible for handling the user interface and user experience. We are adopting a modern and efficient approach to front-end development using React, a popular JavaScript library for building user interfaces. React follows a component-based architecture, providing a more modular and scalable solution."}),"\n",(0,a.jsx)(n.p,{children:"The front end communicates with the server side, implemented in Java, through REST APIs. This enables the front end to independently fetch and update data from the server, enhancing scalability and maintainability. The React components dynamically render data received from the server, creating a seamless and interactive user experience."}),"\n",(0,a.jsx)(n.p,{children:"Regarding data exchange, the application leverages REST APIs to interact with the Java back end. The use of JSON (JavaScript Object Notation) as the data interchange format ensures a lightweight and easily consumable data structure. React efficiently processes and renders this JSON data, creating a responsive and dynamic user interface. This architecture promotes a clear separation of concerns, enhances maintainability, and leverages the strengths of both React and RESTful APIs."}),"\n",(0,a.jsx)(n.h2,{id:"advantages-of-using-react-for-front-end",children:"Advantages of using React for Front-end"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"React's component-based structure enhances code reusability and maintainability."}),"\n",(0,a.jsx)(n.li,{children:"The virtual DOM in React ensures efficient updates, improving rendering performance."}),"\n",(0,a.jsx)(n.li,{children:"React's declarative syntax simplifies UI development, making code more predictable."}),"\n",(0,a.jsx)(n.li,{children:"Strong community support provides a rich ecosystem for faster development and debugging."}),"\n",(0,a.jsx)(n.li,{children:"React's efficient state management ensures a predictable flow of data within the application."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);