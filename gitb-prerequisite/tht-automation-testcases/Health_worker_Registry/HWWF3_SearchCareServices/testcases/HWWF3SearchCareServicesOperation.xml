<?xml version="1.0" encoding="UTF-8"?>
<testcase id="HWWF3_search_care_services_workflow_operation" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
        <gitb:name>Search Care Services Workflow</gitb:name>
        <gitb:type>CONFORMANCE</gitb:type>
        <gitb:version>1.0</gitb:version>
        <gitb:description>Test case to verify workflow for a point of service application to query a Care Services registry for health workers, facilities, organizations, and/or the services provided by each.</gitb:description>
    </metadata>
    <imports>
        <!-- read data from the JSON stores in name as json string-->
        <artifact type="binary" encoding="UTF-8" name="practitionerToCreateInJsonString">/HWWF3_SearchCareServices/resources/PractitionerToCreate.json</artifact>

        <artifact type="binary" encoding="UTF-8" name="locationToCreateInJsonString">/HWWF3_SearchCareServices/resources/LocationToCreate.json</artifact>

        <artifact type="binary" encoding="UTF-8" name="healthcareServiceToCreateInJsonString">/HWWF3_SearchCareServices/resources/HealthcareServiceToCreate.json</artifact>

        <artifact type="binary" encoding="UTF-8" name="practitionerRoleToCreateInJsonString">/HWWF3_SearchCareServices/resources/PractitionerRoleToCreate.json</artifact>

    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
        <var name="loginUrl" type="string"/>
        <var name="loginType" type="string"/>
        <var name="clientSecret" type="string"/>
        <var name="clientId" type="string"/>
        <var name="headerParamName" type="string"/>
        <var name="headerParamValue" type="string"/>
    </variables>
    <actors>
        <gitb:actor id="ITB" name="ITB" role="SUT"/>
        <gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
    </actors>
    <steps stopOnError="true">


        <assign to="resourceType" type="string">'Practitioner'</assign>


        <send id="practitionerToCreate" desc="Convert practitionerToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Practitioner Data'</log>
        <log>$practitionerToCreate</log>

        <send id="createdPractitioner" desc="Create Practitioner in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerToCreate{convertedBody}</input>
        </send>

        <log>'Created Practitioner Data'</log>
        <log>$createdPractitioner</log>

        <!--
            verify data
        -->
        <verify id="VerifyCreatedPractitioner" handler="StringValidator" desc="Check that practitioner got created successfully or not with correct data.">
            <input name="actualstring">$createdPractitioner{response}{body}{birthDate}</input>
            <input name="expectedstring">'1962-12-12'</input>
        </verify>



        <assign to="practitionerId" type="string">$createdPractitioner{response}{body}{id}</assign>


        <send id="readPractitioner" desc="Read practitioner resource from FHIR server using id" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"Practitioner"</input>
            <input name="fhirResourceId">$practitionerId</input>
        </send>

        <!-- Log the read practitioner data -->
        <log>'Read Practitioner Data'</log>
        <log>$readPractitioner</log>

        <!-- Verify if practitioner has a name -->
        <verify id="VerifyReadPractitioner" handler="StringValidator" desc="Check if read practitioner has same birth date to created one">
            <input name="actualstring">$readPractitioner{response}{body}{birthDate}</input>
            <input name="expectedstring">'1962-12-12'</input>
        </verify>


        <send id="searchedPractitioner" desc="search same Practitioner from the FHIR server by providing parameter" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="parameters">"_id=" || $createdPractitioner{response}{body}{id}</input>
        </send>

        <log>'Searched Practitioner Data'</log>
        <log>$searchedPractitioner</log>

        <process id="searchedPractitionerTotalSize" handler="CollectionUtils">
            <operation>size</operation>
            <input name="map">$searchedPractitioner{response}{body}{entry}</input>
        </process>
        <foreach desc="Iterate list" counter="index" start="0" end="$searchedPractitionerTotalSize{output}">
            <do>
                <log>$searchedPractitioner{response}{body}{entry}{$index}{resource}{birthDate}</log>
                <verify id="VerifySearchedPractitioner" handler="StringValidator" desc="Check if searched practitioner using parameter has that particular practitioner">
                    <input name="actualstring">$searchedPractitioner{response}{body}{entry}{$index}{resource}{birthDate}</input>
                    <input name="expectedstring">'1962-12-12'</input>
                </verify>
            </do>
        </foreach>


        <!--        Location-->
        <send id="locationToCreate" desc="Convert locationToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$locationToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted location Data'</log>
        <log>$locationToCreate</log>

        <send id="createdLocation" desc="Create Location in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$locationToCreate{convertedBody}</input>
        </send>

        <log>'Created Location Data'</log>
        <log>$createdLocation</log>

        <verify id="VerifyCreatedLocation" handler="StringValidator" desc="Check that location got created successfully or not with correct data.">
            <input name="actualstring">$createdLocation{response}{body}{name}</input>
            <input name="expectedstring">'South Wing, second floor'</input>
        </verify>

        <assign to="locationId" type="string">$createdLocation{response}{body}{id}</assign>

        <send id="readLocation" desc="Read location resource from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"Location"</input>
            <input name="fhirResourceId">$locationId</input>
        </send>

        <!-- Log the read location data -->
        <log>'Read Location Data'</log>
        <log>$readLocation</log>

        <!-- Verify if location has a name -->
        <verify id="VerifyReadLocation" handler="StringValidator" desc="Check if location has a name">
            <input name="actualstring">$readLocation{response}{body}{name}</input>
            <input name="expectedstring">'South Wing, second floor'</input>
        </verify>

        <send id="searchedLocation" desc="search same Location from the FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">"Location"</input>
            <input name="parameters">"_id=" || $createdLocation{response}{body}{id}</input>
        </send>
        <log>'Search Location Data'</log>
        <log>$searchedLocation{response}{body}</log>

        <process id="searchedLocationTotalSize" handler="CollectionUtils">
            <operation>size</operation>
            <input name="map">$searchedLocation{response}{body}{entry}</input>
        </process>
        <log>"size="||$searchedLocationTotalSize{output}</log>
        <foreach desc="Iterate list" counter="index" start="0" end="$searchedLocationTotalSize{output}">
            <do>
                <log>$searchedLocation{response}{body}{entry}{$index}{resource}{name}</log>
                <verify id="VerifySearchedLocation" handler="StringValidator" desc="Check if searched Location using parameter has that particular location">
                    <input name="actualstring">$searchedLocation{response}{body}{entry}{$index}{resource}{name}</input>
                    <input name="expectedstring">'South Wing, second floor'</input>
                </verify>
            </do>
        </foreach>

        <!--        HealthCareService-->

        <send id="healthcareServiceToCreate" desc="Convert healthcareServiceToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$healthcareServiceToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted healthcareService Data'</log>
        <log>$healthcareServiceToCreate</log>

        <send id="createdHealthcareService" desc="Create healthcareService in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$healthcareServiceToCreate{convertedBody}</input>
        </send>

        <log>'Created healthcareService Data'</log>
        <log>$createdHealthcareService</log>

        <verify id="VerifyCreatedHealthcareService" handler="StringValidator" desc="Check that healthcareService got created successfully or not with correct data.">
            <input name="actualstring">$createdHealthcareService{response}{body}{name}</input>
            <input name="expectedstring">'Consulting psychologists and/or psychology services'</input>
        </verify>

        <assign to="healthcareServiceId" type="string">$createdHealthcareService{response}{body}{id}</assign>

        <send id="readHealthcareService" desc="Read healthcareService resource from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"HealthcareService"</input>
            <input name="fhirResourceId">$healthcareServiceId</input>
        </send>

        <!-- Log the read healthcareService data -->
        <log>'Read healthcareService Data'</log>
        <log>$readHealthcareService</log>

        <!-- Verify if healthcareService has a name -->
        <verify id="VerifyReadHealthcareService"  handler="StringValidator" desc="Check if HealthcareService has a name">
            <input name="actualstring">$readHealthcareService{response}{body}{name}</input>
            <input name="expectedstring">'Consulting psychologists and/or psychology services'</input>
        </verify>

        <send id="searchedHealthcareService" desc="search same HealthCareService from the FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">"HealthcareService"</input>
            <input name="parameters">"_id=" || $createdHealthcareService{response}{body}{id}</input>
        </send>
        <log>'Search healthcareService Data'</log>
        <log>$searchedHealthcareService{response}{body}</log>


        <process id="searchedHealthcareServiceTotalSize" handler="CollectionUtils">
            <operation>size</operation>
            <input name="map">$searchedHealthcareService{response}{body}{entry}</input>
        </process>

        <foreach desc="Iterate list" counter="index" start="0" end="$searchedHealthcareServiceTotalSize{output}">
            <do>
                <log>$searchedHealthcareService{response}{body}{entry}{$index}{resource}{name}</log>
                <verify id="VerifySearchedHealthcareService" handler="StringValidator" desc="Check if searched HealthCareService using parameter has that particular HealthCareService">
                    <input name="actualstring">$searchedHealthcareService{response}{body}{entry}{$index}{resource}{name}</input>
                    <input name="expectedstring">'Consulting psychologists and/or psychology services'</input>
                </verify>
            </do>
        </foreach>

        <!--    Practitioner Role-->

        <send id="practitionerRoleToCreate" desc="Convert practitionerRoleToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerRoleToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted PractitionerRole Data'</log>
        <log>$practitionerRoleToCreate</log>
        <send id="practitionerRoleWithLocation" desc="Assign Location to the PractitionerRole" from="ITB" to="FhirHandler"
              handler="$DOMAIN{anyContentAssignServiceAddress}">
            <input name="assignTo">$practitionerRoleToCreate</input>
            <input name="assignPath">"practitionerRoleToCreate{convertedBody}{location}{0}"</input>
            <input name="value">$createdLocation{response}{body}</input>
        </send>

        <send id="practitionerRoleWithPractitioner" desc="Assign Practitioner to the PractitionerRole" from="ITB" to="FhirHandler"
              handler="$DOMAIN{anyContentAssignServiceAddress}">
            <input name="assignTo">$practitionerRoleWithLocation</input>
            <input name="assignPath">"practitionerRoleWithLocation{convertedBody}{practitioner}{0}"</input>
            <input name="value">$createdPractitioner{response}{body}</input>
        </send>

        <send id="createdPractitionerRole" desc="Create PractitionerRole in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerRoleWithPractitioner{convertedBody}</input>
        </send>
        <log>'Created PractitionerRole Data'</log>
        <log>$createdPractitionerRole{response}{body}</log>

        <!--
            verify data
        -->
        <verify id="VerifyPractitionerRoleWithPractitioner" handler="StringValidator" desc="Check that practitionerRole got created successfully or not with correct data(practitioner).">
            <input name="actualstring">$createdPractitionerRole{response}{body}{practitioner}{id}</input>
            <input name="expectedstring">$createdPractitioner{response}{body}{id}</input>
        </verify>
        <log>$createdPractitionerRole{response}{body}{location}{0}{id}</log>
        <verify id="VerifyPractitionerRoleWithLocation" handler="StringValidator" desc="Check that practitionerRole got created successfully or not with correct data(Location).">
            <input name="actualstring">$createdPractitionerRole{response}{body}{location}{0}{id}</input>
            <input name="expectedstring">$createdLocation{response}{body}{id}</input>
        </verify>

        <send id="readPractitionerRole" desc="Read PractitionerRole resource from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"PractitionerRole"</input>
            <input name="fhirResourceId">$createdPractitionerRole{response}{body}{id}</input>
        </send>


        <!-- Verify if PractitionerRole has a same availabilityExceptions -->
        <verify id="VerifyReadPractitionerRole" handler="StringValidator" desc="Check if PractitionerRole has a same availabilityExceptions">
            <input name="actualstring">$readPractitionerRole{response}{body}{availabilityExceptions}</input>
            <input name="expectedstring">'Generally unavailable on public holidays and during the Christmas/New Year break'</input>
        </verify>

        <!--Search for PractitionerRole by id **location and practitioner** -->
        <send id="searchPractitionerRole" desc="Search for PractitionerRole from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">"PractitionerRole"</input>
            <input name="parameters">"_id="||$createdPractitionerRole{response}{body}{id}</input>
        </send>
        <!-- Log the searched PractitionerRole data -->
        <log>'Searched PractitionerRole Data'</log>
        <log>$searchPractitionerRole{response}{body}</log>

        <process id="searchedPractitionerRoleTotalSize" handler="CollectionUtils">
            <operation>size</operation>
            <input name="map">$searchPractitionerRole{response}{body}{entry}</input>
        </process>

        <foreach desc="Iterate list" counter="index" start="0" end="$searchedPractitionerRoleTotalSize{output}">
            <do>
                <log>$searchPractitionerRole{response}{body}{entry}{$index}{resource}</log>
                <verify id="VerifySearchPractitionerRole" handler="StringValidator" desc="Check if searched PractitionerRole using parameters has that particular PractitionerRole">
                    <input name="actualstring">$searchPractitionerRole{response}{body}{entry}{$index}{resource}{availabilityExceptions}</input>
                    <input name="expectedstring">'Generally unavailable on public holidays and during the Christmas/New Year break'</input>
                </verify>
            </do>
        </foreach>
    </steps>
    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <case>
                <cond>$STEP_STATUS{practitionerToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert practitioner jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdPractitioner} = 'ERROR'</cond>
                <message>"Failed to Create Practitioner in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyCreatedPractitioner} = 'ERROR'</cond>
                <message>"Failed to verify created practitioner resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readPractitioner} = 'ERROR'</cond>
                <message>"Failed to Read practitioner resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadPractitioner} = 'ERROR'</cond>
                <message>"Failed to verify Read practitioner resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchPractitioner} = 'ERROR'</cond>
                <message>"Failed to Search for practitioner by name from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchedPractitionerTotal} = 'ERROR'</cond>
                <message>"Failed to process search Practitioner total"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyPractitionerTotal} = 'ERROR'</cond>
                <message>"Failed to Validate Practitioner total size"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifySearchedPractitioner} = 'ERROR'</cond>
                <message>"Failed to search practitioner using parameter has that particular practitioner"</message>
            </case>




            <case>
                <cond>$STEP_STATUS{locationToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert location jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdLocation} = 'ERROR'</cond>
                <message>"Failed to Create Location in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyCreatedLocation} = 'ERROR'</cond>
                <message>"Failed to verify created location resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readLocation} = 'ERROR'</cond>
                <message>"Failed to Read location resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadLocation} = 'ERROR'</cond>
                <message>"Failed to verify Read location resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchLocation} = 'ERROR'</cond>
                <message>"Failed to Search for practitioner by name from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchedLocationTotalSize} = 'ERROR'</cond>
                <message>"Failed to process search location total"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyLocationTotalSize} = 'ERROR'</cond>
                <message>"Failed to Validate location total size"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifySearchedLocation} = 'ERROR'</cond>
                <message>"Failed to search location using parameter has that particular location"</message>
            </case>


            <case>
                <cond>$STEP_STATUS{healthcareServiceToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert healthcareService jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdHealthcareService} = 'ERROR'</cond>
                <message>"Failed to Create healthcareService in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyCreatedHealthcareService} = 'ERROR'</cond>
                <message>"Failed to verify created healthcareService resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readHealthcareService} = 'ERROR'</cond>
                <message>"Failed to Read healthcareService resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadHealthcareService} = 'ERROR'</cond>
                <message>"Failed to verify Read healthcareService resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchHealthcareService} = 'ERROR'</cond>
                <message>"Failed to Search for healthcareService by name from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchedHealthcareServiceTotalSize} = 'ERROR'</cond>
                <message>"Failed to process search healthcareService total"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyHealthcareServiceTotalSize} = 'ERROR'</cond>
                <message>"Failed to Validate healthcareService total size"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifySearchedHealthcareService} = 'ERROR'</cond>
                <message>"Failed to search healthcareService using parameter has that particular healthcareService"</message>
            </case>


            <case>
                <cond>$STEP_STATUS{practitionerRoleToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert practitionerRoleToCreate jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{practitionerRoleWithLocation} = 'ERROR'</cond>
                <message>"Failed Assign Location to the PractitionerRole"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{practitionerRoleWithPractitioner} = 'ERROR'</cond>
                <message>"Failed Assign Practitioner to the PractitionerRole"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to Create PractitionerRole in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyPractitionerRoleWithPractitioner} = 'ERROR'</cond>
                <message>"Failed to verify created PractitionerRole resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyPractitionerRoleWithLocation} = 'ERROR'</cond>
                <message>"Failed to verify created PractitionerRole resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to Read PractitionerRole resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to verify Read PractitionerRole resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to Search for PractitionerRole by name from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchedPractitionerRoleTotalSize} = 'ERROR'</cond>
                <message>"Failed to process search PractitionerRole total"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifySearchPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to search PractitionerRole using parameter has that particular PractitionerRole"</message>
            </case>


            <default>"Test case failed."</default>
        </failure>
    </output>
</testcase>
