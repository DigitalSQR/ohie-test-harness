<?xml version="1.0" encoding="UTF-8"?>
<testcase id="HWWF4_request_care_services_updates_workflow_operation" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Request Care Services Updates Workflow</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to verify workflow for a point of service application to query a Care Services Registry or directory for updates to health workers, facilities, organizations, and/or the services provided by each.</gitb:description>
	</metadata>
    <imports>
        <!-- read data from the JSON stores in name as json string-->
        <artifact type="binary" encoding="UTF-8" name="practitionerToCreateInJsonString">/HWWF4_RequestCareServicesUpdates/resources/PractitionerToCreate.json</artifact>
        
        <artifact type="binary" encoding="UTF-8" name="locationToCreateInJsonString">/HWWF4_RequestCareServicesUpdates/resources/LocationToCreate.json</artifact>
        
        <artifact type="binary" encoding="UTF-8" name="healthcareServiceToCreateInJsonString">/HWWF4_RequestCareServicesUpdates/resources/HealthcareServiceToCreate.json</artifact>

        <artifact type="binary" encoding="UTF-8" name="practitionerRoleToCreateInJsonString">/HWWF4_RequestCareServicesUpdates/resources/PractitionerRoleToCreate.json</artifact>

    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
    </variables>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">

        <assign to="resourceType" type="string">'Practitioner'</assign>


        <send id="practitionerToCreate" desc="Convert practitionerToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Practitioner Data'</log>
        <log>$practitionerToCreate</log>

        <send id="createdPractitioner" desc="Create Practitioner in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerToCreate{convertedBody}</input>
        </send>

        <log>'Created Practitioner Data'</log>
        <log>$createdPractitioner</log>

        <!--
            verify data
        -->
        <verify id="VerifyCreatedPractitioner" handler="StringValidator" desc="Check that practitioner got created successfully or not with correct data.">
            <input name="actualstring">$createdPractitioner{response}{body}{birthDate}</input>
            <input name="expectedstring">'1962-12-12'</input>
        </verify>

        <assign to="createdPractitioner{response}{body}{birthDate}" type="string">'1999-07-25'</assign>

        <send id="updatedPractitioner" desc="update patient in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"update"</input>
            <input name="body">$createdPractitioner{response}{body}</input>
        </send>

        <log>'Updated Practitioner Data'</log>
        <log>$updatedPractitioner</log>

     <assign to="practitionerId" type="string">$createdPractitioner{response}{body}{id}</assign>

     
 <send id="readPractitioner" desc="Read practitioner resource from FHIR server using id" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
        <input name="fhirServerBaseUrl">$componentURI</input>
        <input name="username">$username</input>
        <input name="password">$password</input>
        <input name="operationType">"getById"</input>
        <input name="fhirResourceType">"Practitioner"</input>
        <input name="fhirResourceId">$practitionerId</input>
    </send>
    
    <!-- Log the read practitioner data -->
    <log>'Read Practitioner Data'</log>
    <log>$readPractitioner</log>
    
    <!-- Verify if practitioner has expected birthdate after update -->
    <verify id="VerifyReadPractitioner" handler="StringValidator" desc="Check if read practitioner has same birth date to updated one">
        <input name="actualstring">$readPractitioner{response}{body}{birthDate}</input>
        <input name="expectedstring">'1999-07-25'</input>
    </verify>


<!--        Location-->
        <send id="locationToCreate" desc="Convert locationToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$locationToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted location Data'</log>
        <log>$locationToCreate</log>

        <send id="createdLocation" desc="Create Location in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$locationToCreate{convertedBody}</input>
        </send>

        <log>'Created Location Data'</log>
        <log>$createdLocation</log>

        <verify id="VerifyCreatedLocation" handler="StringValidator" desc="Check that location got created successfully or not with correct data.">
            <input name="actualstring">$createdLocation{response}{body}{name}</input>
            <input name="expectedstring">'South Wing, second floor'</input>
        </verify>

        <assign to="createdLocation{response}{body}{name}" type="string">'North Wing , first floor'</assign>

        <send id="updatedLocation" desc="update Location in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"update"</input>
            <input name="body">$createdLocation{response}{body}</input>
        </send>

        <log>'Updated Location Data'</log>
        <log>$updatedLocation</log>

        <assign to="locationId" type="string">$createdLocation{response}{body}{id}</assign>

        <send id="readLocation" desc="Read location resource from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"Location"</input>
            <input name="fhirResourceId">$locationId</input>
        </send>

        <!-- Log the read location data -->
        <log>'Read Location Data'</log>
        <log>$readLocation</log>

        <!-- Verify if location has same name after updation -->
        <verify id="VerifyReadLocation" handler="StringValidator" desc="Check if location has same name to updated one">
            <input name="actualstring">$readLocation{response}{body}{name}</input>
            <input name="expectedstring">'North Wing , first floor'</input>
        </verify>


<!--        HealthCareService-->

        <send id="healthcareServiceToCreate" desc="Convert healthcareServiceToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$healthcareServiceToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted healthcareService Data'</log>
        <log>$healthcareServiceToCreate</log>

        <send id="createdHealthcareService" desc="Create healthcareService in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$healthcareServiceToCreate{convertedBody}</input>
        </send>

        <log>'Created healthcareService Data'</log>
        <log>$createdHealthcareService</log>

        <verify id="VerifyCreatedHealthcareService" handler="StringValidator" desc="Check that healthcareService got created successfully or not with correct data.">
            <input name="actualstring">$createdHealthcareService{response}{body}{name}</input>
            <input name="expectedstring">'Consulting psychologists and/or psychology services'</input>
        </verify>

        <assign to="createdHealthcareService{response}{body}{name}" type="string">'Example Care Services'</assign>

        <send id="updatedHealthcareService" desc="update HealthcareService in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"update"</input>
            <input name="body">$createdHealthcareService{response}{body}</input>
        </send>

        <log>'Updated HealthcareService Data'</log>
        <log>$updatedHealthcareService</log>

        <assign to="healthcareServiceId" type="string">$createdHealthcareService{response}{body}{id}</assign>

        <send id="readHealthcareService" desc="Read healthcareService resource from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"HealthcareService"</input>
            <input name="fhirResourceId">$healthcareServiceId</input>
        </send>

        <!-- Log the read location data -->
        <log>'Read healthcareService Data'</log>
        <log>$readHealthcareService</log>

        <!-- Verify if healthcareService has same name to updated one -->
        <verify id="VerifyReadHealthcareService" handler="StringValidator" desc="Check if HealthcareService has same name to updated one">
            <input name="actualstring">$readHealthcareService{response}{body}{name}</input>
            <input name="expectedstring">'Example Care Services'</input>
        </verify>


<!--    Practitioner Role-->

        <send id="practitionerRoleToCreate" desc="Convert practitionerRoleToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
              handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerRoleToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted PractitionerRole Data'</log>
        <log>$practitionerRoleToCreate</log>

        <send id="practitionerRoleWithLocation" desc="Assign Location to the PractitionerRole" from="ITB" to="FhirHandler"
              handler="$DOMAIN{anyContentAssignServiceAddress}">
            <input name="assignTo">$practitionerRoleToCreate</input>
            <input name="assignPath">"practitionerRoleToCreate{convertedBody}{location}{0}"</input>
            <input name="value">$createdLocation{response}{body}</input>
        </send>
        <log>"After adding location"</log>
        <log>$practitionerRoleWithLocation{convertedBody}</log>

        <send id="practitionerRoleWithPractitioner" desc="Assign Practitioner to the PractitionerRole" from="ITB" to="FhirHandler"
              handler="$DOMAIN{anyContentAssignServiceAddress}">
            <input name="assignTo">$practitionerRoleWithLocation</input>
            <input name="assignPath">"practitionerRoleWithLocation{convertedBody}{practitioner}{0}"</input>
            <input name="value">$createdPractitioner{response}{body}</input>
        </send>

        <send id="createdPractitionerRole" desc="Create PractitionerRole in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitionerRoleWithPractitioner{convertedBody}</input>
        </send>
        <log>'Created PractitionerRole Data'</log>
        <log>$createdPractitionerRole{response}{body}</log>

        <!--
            verify data
        -->
        <verify id="VerifyPractitionerRoleWithPractitioner" handler="StringValidator" desc="Check that practitionerRole got created successfully or not with correct data(practitioner).">
            <input name="actualstring">$createdPractitionerRole{response}{body}{practitioner}{id}</input>
            <input name="expectedstring">$createdPractitioner{response}{body}{id}</input>
        </verify>
        <log>$createdPractitionerRole{response}{body}{location}{0}{id}</log>
        <verify id="VerifyPractitionerRoleWithLocation" handler="StringValidator" desc="Check that practitionerRole got created successfully or not with correct data(Location).">
            <input name="actualstring">$createdPractitionerRole{response}{body}{location}{0}{id}</input>
            <input name="expectedstring">$createdLocation{response}{body}{id}</input>
        </verify>

        <assign to="createdPractitionerRole{response}{body}{availabilityExceptions}" type="string">'Unavailable on weekends'</assign>

        <send id="updatedPractitionerRole" desc="update PractitionerRole in FHIR server" from="ITB" to="FhirHandler"
              handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"update"</input>
            <input name="body">$createdPractitionerRole{response}{body}</input>
        </send>

        <send id="readPractitionerRole" desc="Read PractitionerRole resource from FHIR server" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">"PractitionerRole"</input>
            <input name="fhirResourceId">$createdPractitionerRole{response}{body}{id}</input>
        </send>

        <!-- Verify if PractitionerRole has a same availabilityExceptions -->
        <verify id="VerifyReadPractitionerRole" handler="StringValidator" desc="Check if PractitionerRole has a same availabilityExceptions to updated one">
            <input name="actualstring">$readPractitionerRole{response}{body}{availabilityExceptions}</input>
            <input name="expectedstring">'Unavailable on weekends'</input>
        </verify>
    </steps>
    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <case>
                <cond>$STEP_STATUS{practitionerToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert practitioner jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdPractitioner} = 'ERROR'</cond>
                <message>"Failed to Create Practitioner in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyCreatedPractitioner} = 'ERROR'</cond>
                <message>"Failed to verify created practitioner resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readPractitioner} = 'ERROR'</cond>
                <message>"Failed to Read practitioner resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadPractitioner} = 'ERROR'</cond>
                <message>"Failed to verify Read practitioner resource data"</message>
            </case>




            <case>
                <cond>$STEP_STATUS{locationToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert location jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdLocation} = 'ERROR'</cond>
                <message>"Failed to Create Location in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyCreatedLocation} = 'ERROR'</cond>
                <message>"Failed to verify created location resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readLocation} = 'ERROR'</cond>
                <message>"Failed to Read location resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadLocation} = 'ERROR'</cond>
                <message>"Failed to verify Read location resource data"</message>
            </case>



            <case>
                <cond>$STEP_STATUS{healthcareServiceToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert healthcareService jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdHealthcareService} = 'ERROR'</cond>
                <message>"Failed to Create healthcareService in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyCreatedHealthcareService} = 'ERROR'</cond>
                <message>"Failed to verify created healthcareService resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readHealthcareService} = 'ERROR'</cond>
                <message>"Failed to Read healthcareService resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadHealthcareService} = 'ERROR'</cond>
                <message>"Failed to verify Read healthcareService resource data"</message>
            </case>



            <case>
                <cond>$STEP_STATUS{practitionerRoleToCreate} = 'ERROR'</cond>
                <message>"Failed to Convert practitionerRoleToCreate jsonString to anyContent"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{practitionerRoleWithLocation} = 'ERROR'</cond>
                <message>"Failed Assign Location to the PractitionerRole"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{practitionerRoleWithPractitioner} = 'ERROR'</cond>
                <message>"Failed Assign Practitioner to the PractitionerRole"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{createdPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to Create PractitionerRole in FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyPractitionerRoleWithPractitioner} = 'ERROR'</cond>
                <message>"Failed to verify created PractitionerRole resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyPractitionerRoleWithLocation} = 'ERROR'</cond>
                <message>"Failed to verify created PractitionerRole resource data"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{readPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to Read PractitionerRole resource from FHIR server"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{VerifyReadPractitionerRole} = 'ERROR'</cond>
                <message>"Failed to verify Read PractitionerRole resource data"</message>
            </case>

            <default>"Test case failed."</default>
        </failure>
    </output>  
</testcase>
