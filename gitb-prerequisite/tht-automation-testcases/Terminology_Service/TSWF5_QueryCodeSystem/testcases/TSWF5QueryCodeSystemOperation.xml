<?xml version="1.0" encoding="UTF-8"?>
<testcase id="tswf5_query_code_system_operation" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Query Code System</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to query codeSystem</gitb:description>
	</metadata>
    <imports>
        <!-- read data from the JSON stores in name as json string-->
        <artifact type="binary" encoding="UTF-8" name="codeSystemToCreateInJsonString">/TSWF5_QueryCodeSystem/resources/CodeSystemToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="codeSystem2ToCreateInJsonString">/TSWF5_QueryCodeSystem/resources/CodeSystem2ToCreate.json</artifact>
    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
        <var name="loginUrl" type="string"/>
        <var name="loginType" type="string"/>
        <var name="clientSecret" type="string"/>
        <var name="clientId" type="string"/>
    </variables>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">

        <!-- assigning value -->
        <assign to="resourceType" type="string">'CodeSystem'</assign>
        <!-- convert JSon to anyContent type -->
        <send id="codeSystemToCreate" desc="Convert first codeSystemToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$codeSystemToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!-- Add log -->
        <log>'Converted CodeSystem Data'</log>
        <log>$codeSystemToCreate</log>

        <!-- Create first CodeSystem -->
        <send id="createdCodeSystem" desc="Create first CodeSystem in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$codeSystemToCreate{convertedBody}</input>
        </send>

        <log>'Created CodeSystem Data'</log>
        <log>$createdCodeSystem</log>

        <!--
            verify codeSystem creation
        -->
        <verify id="verifyCreatedCodeSystem" handler="StringValidator" desc="Check that first codeSystem got created successfully or not with correct data.">
            <input name="actualstring">$createdCodeSystem{response}{body}{title}</input>
            <input name="expectedstring">'Example Code System'</input>
        </verify>

        <!-- convert JSon to anyContent type -->
        <send id="codeSystem2ToCreate" desc="Convert second codeSystemToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$codeSystem2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!-- Add log -->
        <log>'Converted CodeSystem Data'</log>
        <log>$codeSystem2ToCreate</log>

        <!-- Create second CodeSystem -->
        <send id="createdCodeSystem2" desc="Create second CodeSystem in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$codeSystem2ToCreate{convertedBody}</input>
        </send>

        <log>'Created CodeSystem Data'</log>
        <log>$createdCodeSystem2</log>

        <!--
            verify second codeSystem creation
        -->
        <verify id="verifyCreatedCodeSystem2" handler="StringValidator" desc="Check that second codeSystem got created successfully or not with correct data.">
            <input name="actualstring">$createdCodeSystem2{response}{body}{name}</input>
            <input name="expectedstring">'ACMECholCodesBlood'</input>
        </verify>

        <!-- search codeSystem based on publisher -->
        <send id="searchedCodeSystemByPublisher" desc="Search CodeSystem by publisherName from the FHIR server" from="ITB" to="FhirHandler"
        handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="httpMethod">GET</input>
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="fhirResourceType">'CodeSystem'</input>
            <input name="operationType">"search"</input>
            <input name="parameters">"publisher=HL7%20International%20%2F%20Terminology%20Infrastructure"</input>
        </send>

        <log>'Searched CodeSystem by publisher'</log>
        <log>$searchedCodeSystemByPublisher</log>

        <process id="searchedCodeSystemByPublisherLinkSize" handler="CollectionUtils">
            <operation>size</operation>
            <input name="map">$searchedCodeSystemByPublisher{response}{body}{entry}</input>
        </process>
        <log>'Search by publisher name result size :'</log>
        <log>"size="||$searchedCodeSystemByPublisherLinkSize{output}</log>

        <assign to="urlFound" type="boolean">false</assign>
        <assign to="index" type="number">0</assign>

        <repuntil desc="Iterate through CodeSystem entries">
            <do>
                <assign to="currentCodeSystemUrl" type="string">$searchedCodeSystemByPublisher{response}{body}{entry}{$index}{resource}{url}</assign>
                <if>
                    <cond>$currentCodeSystemUrl = $createdCodeSystem{response}{body}{url}</cond>
                    <then>
                        <assign to="urlFound">1</assign>
                        <log>'CodeSystem with the desired URL found.'</log>
                    </then>
                </if>
                <assign to="index">number($index)+1</assign>
            </do>
        <cond>$index &lt;= $searchedCodeSystemByPublisherLinkSize{output} and not($urlFound)</cond>
        </repuntil>

        <!--
            verify if codeSystem found for given publisher name
        -->
        <verify id="verifySearchedCodeSystemByPublisher" handler="ExpressionValidator" desc="Check if codeSystem found for given publisher name">
            <input name="expression">$urlFound</input>
        </verify>

        <log>'Validation result :'</log>
        <log>$urlFound</log>

        <!-- Search based on id -->
        <send id="searchedCodeSystemById" desc="fetch codeSystem by ID from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$createdCodeSystem2{response}{body}{id}</input>
        </send>

        <log>'Searched CodeSystem by id'</log>
        <log>$searchedCodeSystemById</log>

        <!--
            verify search operation based on id
        -->
        <verify id="verifySearchedCodeSystemById" handler="StringValidator" desc="Verifying search by id">
            <input name="actualstring">$searchedCodeSystemById{response}{body}{name}</input>
            <input name="expectedstring">'ACMECholCodesBlood'</input>
        </verify>

        <!-- Search based on code -->
         <send id="searchedCodeSystemByCode" desc="Search CodeSystem by code from the FHIR server" from="ITB" to="FhirHandler"
        handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="httpMethod">GET</input>
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="fhirResourceType">'CodeSystem'</input>
            <input name="operationType">"search"</input>
            <input name="parameters">"code=chol-mmol&amp;_id=" || $createdCodeSystem2{response}{body}{id}</input>
        </send>

        <log>'Searched CodeSystem by code'</log>
        <log>$searchedCodeSystemByCode</log>

        <!--
            verify search operation based on code
        -->
        <verify id="verifySearchedCodeSystemByCode" handler="StringValidator" desc="Verifying search by code">
            <input name="actualstring">$searchedCodeSystemByCode{response}{body}{entry}{0}{resource}{url}</input>
            <input name="expectedstring">'http://hl7.org/fhir/CodeSystem/example/102'</input>
        </verify>

        <!-- delete codeSystem -->
        <send id="deleteCodeSystem" desc="delete first codeSystem from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"delete"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$createdCodeSystem{response}{body}{id}</input>
        </send>
     
        <log>'Delete CodeSystem Response'</log>
        <log>$deleteCodeSystem</log>

        <!-- delete codeSystem -->
        <send id="deleteCodeSystem2" desc="delete second codeSystem from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"delete"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$createdCodeSystem2{response}{body}{id}</input>
        </send>
     
        <log>'Delete CodeSystem Response'</log>
        <log>$deleteCodeSystem2</log>

    </steps>

    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
           <case>
                <cond>$STEP_STATUS{codeSystemToCreate} = 'ERROR'</cond>
                <message>"Failed to convert first codeSystem type (jsonString to anyContent)."</message>
            </case>     
            <case>
                <cond>$STEP_STATUS{createdCodeSystem} = 'ERROR'</cond>
                <message>"Failed to create first codeSystem"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCreatedCodeSystem} = 'ERROR'</cond>
                <message>"Failed to verify first codeSystem creation"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{codeSystem2ToCreate} = 'ERROR'</cond>
                <message>"Failed to convert second codeSystem type (jsonString to anyContent)."</message>
            </case>     <case>
                <cond>$STEP_STATUS{searchedCodeSystemByPublisher} = 'ERROR'</cond>
                <message>"Failed to perform search operation based on publisher"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifySearchedCodeSystemByPublisher} = 'ERROR'</cond>
                <message>"Invalid result for the search operation based on publisher"</message>
            </case> 
            <case>
                <cond>$STEP_STATUS{createdCodeSystem2} = 'ERROR'</cond>
                <message>"Failed to create second codeSystem"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCreatedCodeSystem2} = 'ERROR'</cond>
                <message>"Failed to verify second codeSystem creation"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{searchedCodeSystemByPublisher} = 'ERROR'</cond>
                <message>"Failed to perform search operation based on publisher"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifySearchedCodeSystemByPublisher} = 'ERROR'</cond>
                <message>"Invalid result for the search operation based on publisher"</message>
            </case>   
            <case>
                <cond>$STEP_STATUS{searchedCodeSystemById} = 'ERROR'</cond>
                <message>"Failed to perform search operation based on id"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifySearchedCodeSystemById} = 'ERROR'</cond>
                <message>"Invalid result for the search operation based on id"</message>
            </case> 
            <case>
                <cond>$STEP_STATUS{searchedCodeSystemByCode} = 'ERROR'</cond>
                <message>"Failed to perform search operation based on code"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifySearchedCodeSystemByCode} = 'ERROR'</cond>
                <message>"Invalid result for the search operation based on code"</message>
            </case> 
            <case>
                <cond>$STEP_STATUS{deleteConceptMap} = 'ERROR'</cond>
                <message>"Failed to delete first codeSystem"</message>
            </case> 
            <case>
                <cond>$STEP_STATUS{deleteConceptMap2} = 'ERROR'</cond>
                <message>"Failed to delete second codeSystem"</message>
            </case>                   
            <default>"Test case failed. Please check the failed step's report for more information and the test log."</default> 
        </failure>
    </output>  
</testcase>
