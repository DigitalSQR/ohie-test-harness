<?xml version="1.0" encoding="UTF-8"?>
<testcase id="tswf1_verify_code_existence_operation" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Verify code existence</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to verify if a concept code present in a codeSystem</gitb:description>
	</metadata>
    <imports>
        <!-- read data from the JSON stores in name as json string-->
        <artifact type="binary" encoding="UTF-8" name="codeSystemToCreateInJsonString">/TSWF1_VerifyCodeExistence/resources/CodeSystemToCreate.json</artifact>
    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
    </variables>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">

        <!-- assigning value -->
        <assign to="resourceType" type="string">'CodeSystem'</assign>

        <!-- convert JSon to anyContent type -->
        <send id="codeSystemToConvert" desc="Convert codeSystemToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$codeSystemToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!-- Add log -->
        <log>'Converted CodeSystem Data'</log>
        <log>$codeSystemToConvert</log>

        <!-- Create CodeSystem -->
        <send id="createdCodeSystem" desc="Create CodeSystem in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$codeSystemToConvert{convertedBody}</input>
        </send>

        <log>'Created CodeSystem Data'</log>
        <log>$createdCodeSystem</log>

        <!--
            verify codeSystem creation
        -->
        <verify id="verifyCodeSystemcreation" handler="StringValidator" desc="Check that codeSystem got created successfully or not with correct data.">
            <input name="actualstring">$createdCodeSystem{response}{body}{title}</input>
            <input name="expectedstring">'Example Code System'</input>
        </verify>

        
        <!-- Perform $validate-code operation -->
        <send id="validateCode" desc="Perform validate-code operation" from="ITB" to="FhirHandler" handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="httpMethod">POST</input>
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="operationType">"validate-code"</input>
            <input name="parameters.url">$createdCodeSystem{response}{body}{url}</input>
            <input name="parameters.code">12345</input>
            <input name="parameters.system">""</input>
        </send>

        <log>'Validating CodeSystem Data'</log>
        <log>$validateCode</log>

        <!--
            verify if code present in a codeSystem or not
        -->
        <verify id="verifyValidateCode" handler="ExpressionValidator" desc="Check if code is valid for the specified CodeSystem">
            <input name="expression">$validateCode{response}{body}{parameter}{0}{valueBoolean}</input>
        </verify>

        <log>'Validation result :'</log>
        <log>$verifyValidateCode</log>

        <!-- delete codeSystem -->
        <send id="deleteCodeSystem" desc="delete codeSystem from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"delete"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$createdCodeSystem{response}{body}{id}</input>
        </send>
     
        <log>'Delete CodeSystem Response'</log>
        <log>$deleteCodeSystem</log>


    </steps>

    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <case>
                <cond>$STEP_STATUS{codeSystemToConvert} = 'ERROR'</cond>
                <message>"Failed to convert codeSystem type (jsonString to anyContent)."</message>
            </case>     
            <case>
                <cond>$STEP_STATUS{createdCodeSystem} = 'ERROR'</cond>
                <message>"Failed to create CodeSystem"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCodeSystemcreation} = 'ERROR'</cond>
                <message>"Failed to verify codeSystem creation"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{validateCode} = 'ERROR'</cond>
                <message>"Failed to perform $validate-code operation"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyValidateCode} = 'ERROR'</cond>
                <message>"Given code is invalid for the specified CodeSystem"</message>
            </case>   
            <case>
                <cond>$STEP_STATUS{deleteCodeSystem} = 'ERROR'</cond>
                <message>"Failed to delete CodeSystem"</message>
            </case>                   
            <default>"Test case failed. Please check the failed step's report for more information and the test log."</default>
        </failure>
    </output>  
</testcase>