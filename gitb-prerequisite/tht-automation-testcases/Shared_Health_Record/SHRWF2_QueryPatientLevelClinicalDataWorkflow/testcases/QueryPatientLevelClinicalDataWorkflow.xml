<?xml version="1.0" encoding="UTF-8"?>
<testcase id="query_patient_level_clinical_data_workflow" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Verify patient related operations</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to verify FHIR resource patient related operations</gitb:description>
	</metadata>
    <imports>
        <!-- read data from the JSON stores in name as json string-->
        <artifact type="binary" encoding="UTF-8" name="patientToCreateInJsonString">/SHRWF2_QueryPatientLevelClinicalDataWorkflow/resources/PatientToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="practitioner1ToCreateInJsonString">/SHRWF2_QueryPatientLevelClinicalDataWorkflow/resources/Practitioner1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="practitioner2ToCreateInJsonString">/SHRWF2_QueryPatientLevelClinicalDataWorkflow/resources/Practitioner2ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="documentReference1ToCreateInJsonString">/SHRWF2_QueryPatientLevelClinicalDataWorkflow/resources/DocumentReference1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="documentReference2ToCreateInJsonString">/SHRWF2_QueryPatientLevelClinicalDataWorkflow/resources/DocumentReference2ToCreate.json</artifact>
    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
        <var name="loginUrl" type="string"/>
        <var name="loginType" type="string"/>
        <var name="clientSecret" type="string"/>
        <var name="clientId" type="string"/>
    </variables>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">

        <!--
            assign will stores value in variable, and it can be used as $variable_name

            right now ITB doesn't support parsing JsonString as map/array
            but it has specific type anyContent which works as map
            and we can do stuff like $variable_name{$property_name_1}{0}{$property_name_2}

            Detailed document : https://www.itb.ec.europa.eu/docs/tdl/latest/expressions/index.html#referring-to-variables
        -->
        <assign to="resourceType" type="string">'Patient'</assign>


        <!-- 
            send operation execute send method of handler (Which is written in JavaCode)
            send operation's response will get stored in id 


            Right now we have following custom handlers with following inputs:
            1. $DOMAIN{jsonStringConverterServiceAddress} - converts anyContent <-> jsonString
                1.body
                    - required 
                    - body which needs to be converted anyContent <-> jsonString                
                2.bodyType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
                    - convert body to opposite type.
            Response 
                - Structure $send_id{convertedBody}

            2. $DOMAIN{fhirContextServiceAddress} - make operations for the FHIR
                1.fhirServerBaseUrl
                    - required
                    - base URL of FHIR Server
                2.fhirVersion
                    - optional
                    - default value = R4
                    - possible value = DSTU2, DSTU3, STU3, R4, R4B, R5, Partial version strings (e.g. "3.0")
                3.connectTimeout
                    - optional
                    - deafault value = 60000 (in milliseconds)
                    - Sets the connect timeout, in milliseconds. This is the amount of time that the initial connection attempt network operation may block without failing.
                4.socketTimeout
                    - optional
                    - deafault value = 60000 (in milliseconds)
                    - Sets the socket timeout, in milliseconds. This is the SO_TIMEOUT time, which is the amount of time that a read/write network operation may block without failing.
                5.userName
                    - optional
                    - username for the basic username/password based authentication/authorization
                6.password
                    - optional
                    - password for the basic username/password based authentication/authorization
                7.token
                    - optional
                    - token for the bearer token based authentication/authorization
                8.responseType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
                9.operationType
                    - required
                    - possible value = create, update, delete, search, getById, getHistoryById
                    
                extra parameters depending on operation:
                create/update:
                    1.bodyType
                        - optional
                        - default value = anyContent
                        - possible value = jsonString, anyContent
                    2.body
                        -required
                        -resource data which needs to be created/update
                search:
                    1.fhirResourceType
                        - required
                        - possible value = Patient, etc.
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -parameters as query parameters for filter
                getById/delete/getHistoryById:
                    1.fhirResourceType
                        - required
                        - possible value = Patient, etc.
                        - ResourceType of FHIR resource for which we're making operation
                    2.fhirResourceId
                        - required
                        - ID of FHIR resource for which we're making operation
            Response Structure 
                - $send_id{request}{endpoint}
                - $send_id{request}{body}
                - $send_id{response}{status}
                - $send_id{response}{body}

            3. $DOMAIN{apiCallServiceAddress} - make any kind of calls
                1.httpMethod
                    - required
                    - possible value = GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS, TRACE
                    - Http Method Types
                2.url
                    - required
                    - url for the Http Request
                3.mediaType
                    -optional
                    -deafult value = application/json, etc
                    -mediaType for the Http Call
                3.body
                    -optional
                    -request body for the Http Call
                4.header
                    -optional
                    -header parameters for the Http Call
                5.responseType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
            Response Structure 
                - $send_id{request}{endpoint}
                - $send_id{request}{body}
                - $send_id{response}{status}
                - $send_id{response}{body}
        -->

        <send id="patientToCreate" desc="Convert patientToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input> 
            <input name="operationType">"create"</input>
            <input name="body">$patientToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Patient Data'</log>
        <log>$patientToCreate</log>

        <send id="createdPatient" desc="Create Patient in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$patientToCreate{convertedBody}</input>
        </send>

        <log>'Created Patient Data'</log>
        <log>$createdPatient</log>

        <!--
            verify data
        -->
        <verify id = "patientCreation" handler="StringValidator" desc="Check that patient got created successfully or not with correct data.">
            <input name="actualstring">$createdPatient{response}{body}{birthDate}</input>
            <input name="expectedstring">'1970-01-01'</input>
        </verify>

        <!-- Convert Practitioner1 Data -->
        
        <send id="practitioner1ToCreate" desc="Convert practitioner1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>
        
        <!--
            Add log
        -->
        <log>'Converted Practitioner1 Data'</log>
        <log>$practitioner1ToCreate</log>
        
        <!-- Create First Practitioner -->
        
        <send id="createdPractitioner1" desc="Create Practitioner 1 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner1ToCreate{convertedBody}</input>
        </send>
        
        <!-- Add log -->
        
        <log>'Created First Practitioner'</log>
        <log>$createdPractitioner1</log>
        
        <!-- Verify -->
        
        <verify id="practitioner1Creation" handler="StringValidator" desc="Check that practitioner 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdPractitioner1{response}{body}{birthDate}</input>
            <input name="expectedstring">'1970-02-02'</input>
        </verify>
        
        <!-- Convert Practitioner2 Data -->
        
        <send id="practitioner2ToCreate" desc="Convert practitioner2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>
        
        <!--
            Add log
        -->
        <log>'Converted Practitioner 2 Data'</log>
        <log>$practitioner2ToCreate</log>
        
        
        <!-- Create Second Practitioner -->
        
        <send id="createdPractitioner2" desc="Create Practitioner 2 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner2ToCreate{convertedBody}</input>
        </send>
        
        <!-- Add log -->
        
        <log>'Created Second Practitioner'</log>
        <log>$createdPractitioner2</log>
        
        <!-- Verify -->
        
        <verify id="practitioner2Creation" handler="StringValidator" desc="Check that practitioner got created successfully or not with correct data.">
            <input name="actualstring">$createdPractitioner2{response}{body}{birthDate}</input>
            <input name="expectedstring">'1980-03-03'</input>
        </verify>

        <!-- Convert Document Reference Data -->
        
        <send id="documentReference1ToCreate" desc="Convert documentReference1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReference1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>
        
        <assign to="documentReference1ToCreate{convertedBody}{subject}{reference}">'Patient/' || $createdPatient{response}{body}{id}</assign>
        <assign to="documentReference1ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/' || $createdPractitioner1{response}{body}{id}</assign>
        
        <!--
            Add log
        -->
        <log>'Converted Document Reference 1 Data'</log>
        <log>$documentReference1ToCreate</log>

        <!-- Create First Document Reference -->
        
        <send id="createdDocumentReference1" desc="Create Document 1 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReference1ToCreate{convertedBody}</input>
        </send>
        
        <!-- Add log -->
        
        <log>'Created First Document Reference'</log>
        <log>$createdDocumentReference1</log>

        <!-- Verify -->
        
        <verify id="documentReference1Creation" handler="StringValidator" desc="Check that document reference 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdDocumentReference1{response}{body}{content}{0}{attachment}{data}</input>
            <input name="expectedstring">$documentReference1ToCreate{convertedBody}{content}{0}{attachment}{data}</input>
        </verify>

        <!-- Convert Document Reference 2 Data -->
        
        <send id="documentReference2ToCreate" desc="Convert documentReference2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReference2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>
        
        <assign to="documentReference2ToCreate{convertedBody}{subject}{reference}">'Patient/' || $createdPatient{response}{body}{id}</assign>
        <assign to="documentReference2ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/' || $createdPractitioner2{response}{body}{id}</assign>

        <!--
            Add log
        -->
        <log>'Converted Document Reference 2 Data'</log>
        <log>$documentReference2ToCreate</log>

        <!-- Create Second Document Reference -->
        
        <send id="createdDocumentReference2" desc="Create Document 2 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReference2ToCreate{convertedBody}</input>
        </send>
        
        <!-- Add log -->
        
        <log>'Created Second Document Reference'</log>
        <log>$createdDocumentReference2</log>
        
        
        <!-- Verify -->
        
        <verify id="documentReference2Creation" handler="StringValidator" desc="Check that document reference 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdDocumentReference2{response}{body}{content}{0}{attachment}{data}</input>
            <input name="expectedstring">$documentReference2ToCreate{convertedBody}{content}{0}{attachment}{data}</input>
        </verify>

        <!-- Search for Document Reference that has subject reference of the created patient-->

        <send id="searchedDocumentReference" desc="search for document reference based on reference to patient" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">'DocumentReference'</input>
            <input name="parameters">'patient=' ||$createdPatient{response}{body}{id} </input>
        </send>

        <log>'Searched Document Reference'</log>
        <log>$searchedDocumentReference</log>

        <assign to="isCdaCompliant">'false'</assign>

        <foreach desc="Iterate list" counter="index" start="0" end="$searchedDocumentReference{response}{body}{total}">
            <do>
                
                <if desc="Check if entry resource is a Document Reference or not">
                    <cond>$searchedDocumentReference{response}{body}{entry}{$index}{resource}{subject}{reference} = $createdDocumentReference1{response}{body}{subject}{reference}</cond>
                    <then>

                        <!-- Search For Document Reference using ID -->

                        <send id="searchedDocumentReferenceById" desc="search for document reference based on Id" from="ITB" to="FhirHandler"
                            handler="$DOMAIN{fhirContextServiceAddress}">
                            <input name="fhirServerBaseUrl">$componentURI</input>
                                        <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
                            <input name="operationType">"search"</input>
                            <input  name="fhirResourceType">'DocumentReference'</input>
                            <input name="parameters">'_id='||$searchedDocumentReference{response}{body}{entry}{$index}{resource}{id} </input>
                        </send>

                        <log>'Searched Document Reference By ID'</log>
                        <log>$searchedDocumentReferenceById</log>

                        <!-- Verify if document reference retrieved exists -->

                        <verify id="documentReferenceRetrieval" handler="StringValidator" desc="Check that document reference 1 got created successfully or not with correct data.">
                            <input name="actualstring">$searchedDocumentReferenceById{response}{body}{entry}{0}{resource}{id}</input>
                            <input name="expectedstring">$searchedDocumentReference{response}{body}{entry}{$index}{resource}{id}</input>
                        </verify>

                        <!-- Check if document reference retrieved is cda compliant -->

                        <process id="searchedDocumentReferenceByIdContentSize" handler="CollectionUtils">
                            <operation>size</operation>
                            <input name="map">$searchedDocumentReferenceById{response}{body}{entry}{0}{resource}{content}</input>
                        </process>
                        
                        <foreach desc="Iterate list" counter="contentIndex" start="0" end="$searchedDocumentReferenceByIdContentSize{output}">
                            <do>
                                <if desc="Check if Document Reference is CDA compliant or not">
                                    <cond>$searchedDocumentReferenceById{response}{body}{entry}{0}{resource}{content}{$contentIndex}{attachment}{contentType} = 'application/xml'</cond>
                                    <then>
                                        <assign to="isCdaCompliant">'true'</assign>
                                    </then>
                                </if>
                            </do>
                        </foreach>

                        <verify id="CDACompliant" handler="StringValidator" desc="Check that document reference 1 got created successfully or not with correct data.">
                            <input name="actualstring">$isCdaCompliant</input>
                            <input name="expectedstring">'true'</input>
                        </verify>

                    </then>
                </if>
            </do>
        </foreach>

    </steps>

    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <case>
                <cond>$STEP_STATUS{patientCreation} = 'ERROR'</cond>
                <message>"Patient Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{practitioner1Creation} = 'ERROR'</cond>
                <message>"Practitioner 1 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{practitioner2Creation} = 'ERROR'</cond>
                <message>"Practitioner 2 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{documentReference1Creation} = 'ERROR'</cond>
                <message>"Document Reference 1 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{documentReference2Creation} = 'ERROR'</cond>
                <message>"Document Reference 2 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{documentReferenceRetrieval} = 'ERROR'</cond>
                <message>"Document Reference with retrieved id does not exist"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{CDACompliant} = 'ERROR'</cond>
                <message>"Searched Document Reference is not CDA compliant"</message>
            </case>
            <default>"Test case failed."</default>
        </failure>
    </output>  
</testcase>
