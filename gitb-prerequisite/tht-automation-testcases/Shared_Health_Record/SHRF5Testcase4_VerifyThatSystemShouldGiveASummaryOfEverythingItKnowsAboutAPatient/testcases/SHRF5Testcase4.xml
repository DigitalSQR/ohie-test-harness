<?xml version="1.0" encoding="UTF-8"?>
<testcase id="verify_system_can_give_summary_of_everything_it_knows_about_a_patient" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Verify system can give summary of everything it knows about a patient</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to Verify system can give summary of everything it knows about a patient</gitb:description>
	</metadata>
    <imports>
        <artifact type="binary" encoding="UTF-8" name="patientToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/PatientToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="practitioner1ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/Practitioner1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="practitioner2ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/Practitioner2ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="organization1ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/Organization1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="organization2ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/Organization2ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="admissionNote1ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/AdmissionNote1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="admissionNote2ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/AdmissionNote2ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="documentReferenceAdmissionNote1ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/DocumentReferenceAdmissionNote1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="documentReferenceAdmissionNote2ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/DocumentReferenceAdmissionNote2ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="operativeNote1ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/OperativeNote1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="operativeNote2ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/OperativeNote2ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="documentReferenceOperativeNote1ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/DocumentReferenceOperativeNote1ToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="documentReferenceOperativeNote2ToCreateInJsonString">/SHRF5Testcase4_VerifyThatSystemShouldGiveASummaryOfEverythingItKnowsAboutAPatient/resources/DocumentReferenceOperativeNote2ToCreate.json</artifact>
    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
    </variables>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">
        <!--
            assign will stores value in variable, and it can be used as $variable_name

            right now ITB doesn't support parsing JsonString as map/array
            but it has specific type anyContent which works as map
            and we can do stuff like $variable_name{$property_name_1}{0}{$property_name_2}

            Detailed document : https://www.itb.ec.europa.eu/docs/tdl/latest/expressions/index.html#referring-to-variables
        -->
        <assign to="resourceType" type="string">'Patient'</assign>


        <!-- 
            send operation execute send method of handler (Which is written in JavaCode)
            send operation's response will get stored in id 


            Right now we have following custom handlers with following inputs:
            1. $DOMAIN{jsonStringConverterServiceAddress} - converts anyContent <-> jsonString
                1.body
                    - required 
                    - body which needs to be converted anyContent <-> jsonString                
                2.bodyType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
                    - convert body to opposite type.
            Response 
                - Structure $send_id{convertedBody}

            2. $DOMAIN{fhirContextServiceAddress} - make operations for the FHIR
                1.fhirServerBaseUrl
                    - required
                    - base URL of FHIR Server
                2.fhirVersion
                    - optional
                    - default value = R4
                    - possible value = DSTU2, DSTU3, STU3, R4, R4B, R5, Partial version strings (e.g. "3.0")
                3.connectTimeout
                    - optional
                    - deafault value = 60000 (in milliseconds)
                    - Sets the connect timeout, in milliseconds. This is the amount of time that the initial connection attempt network operation may block without failing.
                4.socketTimeout
                    - optional
                    - deafault value = 60000 (in milliseconds)
                    - Sets the socket timeout, in milliseconds. This is the SO_TIMEOUT time, which is the amount of time that a read/write network operation may block without failing.
                5.userName
                    - optional
                    - username for the basic username/password based authentication/authorization
                6.password
                    - optional
                    - password for the basic username/password based authentication/authorization
                7.token
                    - optional
                    - token for the bearer token based authentication/authorization
                8.responseType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
                9.operationType
                    - required
                    - possible value = create, update, delete, search, getById, getHistoryById
                    
                extra parameters depending on operation:
                create/update:
                    1.bodyType
                        - optional
                        - default value = anyContent
                        - possible value = jsonString, anyContent
                    2.body
                        -required
                        -resource data which needs to be created/update
                search:
                    1.fhirResourceType
                        - required
                        - possible value = Patient, etc.
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -parameters as query parameters for filter
                getById/delete/getHistoryById:
                    1.fhirResourceType
                        - required
                        - possible value = Patient, etc.
                        - ResourceType of FHIR resource for which we're making operation
                    2.fhirResourceId
                        - required
                        - ID of FHIR resource for which we're making operation
            Response Structure 
                - $send_id{request}{endpoint}
                - $send_id{request}{body}
                - $send_id{response}{status}
                - $send_id{response}{body}

            3. $DOMAIN{apiCallServiceAddress} - make any kind of calls
                1.httpMethod
                    - required
                    - possible value = GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS, TRACE
                    - Http Method Types
                2.url
                    - required
                    - url for the Http Request
                3.mediaType
                    -optional
                    -deafult value = application/json, etc
                    -mediaType for the Http Call
                3.body
                    -optional
                    -request body for the Http Call
                4.header
                    -optional
                    -header parameters for the Http Call
                5.responseType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
            Response Structure 
                - $send_id{request}{endpoint}
                - $send_id{request}{body}
                - $send_id{response}{status}
                - $send_id{response}{body}
        -->

        <!-- Convert Patient Data -->

        <send id="patientToCreate" desc="Convert patientToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$patientToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Patient Data'</log>
        <log>$patientToCreate</log>

        <send id="createdPatient" desc="Create Patient in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$patientToCreate{convertedBody}</input>
        </send>

        <log>'Created Patient Data'</log>
        <log>$createdPatient</log>

        <!--
            verify data
        -->
        <verify id="verifyCreatePatient" handler="StringValidator" desc="Check that patient got created successfully or not with correct data.">
            <input name="actualstring">$createdPatient{response}{body}{birthDate}</input>
            <input name="expectedstring">'1970-01-01'</input>
        </verify>

        <!-- Convert Practitioner1 Data -->

        <send id="practitioner1ToCreate" desc="Convert practitioner1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Practitioner 1 Data'</log>
        <log>$practitioner1ToCreate</log>

        <send id="createdPractitioner1" desc="Create Practitioner 1 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner1ToCreate{convertedBody}</input>
        </send>

        <log>'Created Practitioner 1 Data'</log>
        <log>$createdPractitioner1</log>

        <!--
            verify data
        -->
        <verify id="verifyCreatePractitioner1" handler="StringValidator" desc="Check that practitioner 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdPractitioner1{response}{body}{birthDate}</input>
            <input name="expectedstring">'1970-10-22'</input>
        </verify>

        <!-- Convert Practitioner2 Data -->

        <send id="practitioner2ToCreate" desc="Convert practitioner2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Practitioner 2 Data'</log>
        <log>$practitioner2ToCreate</log>

        <send id="createdPractitioner2" desc="Create Practitioner 2 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$practitioner2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Practitioner 2 Data'</log>
        <log>$createdPractitioner2</log>

        <!--
            verify data
        -->
        <verify id="verifyCreatePractitioner2" handler="StringValidator" desc="Check that practitioner 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdPractitioner2{response}{body}{birthDate}</input>
            <input name="expectedstring">'1970-10-20'</input>
        </verify>

        <!-- Convert Organization1 Data -->

        <send id="organization1ToCreate" desc="Convert organization1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Organization 1 Data'</log>
        <log>$organization1ToCreate</log>

        <send id="createdOrganization1" desc="Create Organization 1 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization1ToCreate{convertedBody}</input>
        </send>

        <log>'Created Organization 1 Data'</log>
        <log>$createdOrganization1</log>

        <!--
            verify data
        -->
        <verify id="verifyCreateOrganization1" handler="StringValidator" desc="Check that organization 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdOrganization1{response}{body}{name}</input>
            <input name="expectedstring">'Good Health Clinic'</input>
        </verify>

        <!-- Convert Organization2 Data -->

        <send id="organization2ToCreate" desc="Convert organization2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Organization 2 Data'</log>
        <log>$organization2ToCreate</log>

        <send id="createdOrganization2" desc="Create Organization 2 in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Organization 2 Data'</log>
        <log>$createdOrganization2</log>

        <!--
            verify data
        -->
        <verify id="verifyCreateOrganization2" handler="StringValidator" desc="Check that organization 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdOrganization2{response}{body}{name}</input>
            <input name="expectedstring">'Better Health Clinic'</input>
        </verify>

        <log>$DOMAIN{fhirContextServiceAddress}</log>
        <log>fhirContextServiceAddress</log>
        <log>$componentURI</log>
        <log>embeddedFhirServerEndpoint</log>


        <!-- Convert Admission Note 1 data -->

        <send id="admissionNote1ToCreate" desc="Convert admissionNote1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$admissionNote1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="admissionNote1ToCreate{convertedBody}{subject}{reference}">'Patient/'||$createdPatient{response}{body}{id}</assign>
        <assign to="admissionNote1ToCreate{convertedBody}{customdian}{reference}">'Organization/'||$createdOrganization1{response}{body}{id}</assign>
        <assign to="admissionNote1ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/'||$createdPractitioner1{response}{body}{id}</assign>

        <log>'Converted Admission Note 1 Data'</log>
        <log>$admissionNote1ToCreate</log>

        <send id="createdAdmissionNote1" desc="Create Admission Note 1 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$admissionNote1ToCreate{convertedBody}</input>
        </send>

        <log>'Created Admission Note 1 Data'</log>
        <log>$createdAdmissionNote1</log>

        <verify id="verifyCreateAdmissionNote1" handler="StringValidator" desc="Check that admissionNote 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdAdmissionNote1{response}{body}{type}{coding}{0}{display}</input>
            <input name="expectedstring">'Admission note'</input>
        </verify>
        <send id="documentReferenceAdmissionNote1ToCreate" desc="Convert documentReferenceAdmissionNote1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceAdmissionNote1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>
        <assign to="documentReferenceAdmissionNote1ToCreate{convertedBody}{subject}{reference}">'Patient/' || $createdPatient{response}{body}{id}</assign>
        <assign to="documentReferenceAdmissionNote1ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/' || $createdPractitioner1{response}{body}{id}</assign>
        <log>'Converted Document Reference Admission Note 1 Data'</log>
        <log>$documentReferenceAdmissionNote1ToCreate</log>

        <send id="createdDocumentReferenceAdmissionNote1" desc="Create Document Reference Admission Note 1 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceAdmissionNote1ToCreate{convertedBody}</input>
        </send>
        <log>'Created First Document Reference Admission Note'</log>
        <log>$createdDocumentReferenceAdmissionNote1</log>

        <verify id="documentReferenceAdmissionNote1Creation" handler="StringValidator" desc="Check that document reference Admission Note 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdDocumentReferenceAdmissionNote1{response}{body}{content}{0}{attachment}{data}</input>
            <input name="expectedstring">$documentReferenceAdmissionNote1ToCreate{convertedBody}{content}{0}{attachment}{data}</input>
        </verify>

        <send id="admissionNote2ToCreate" desc="Convert admissionNote2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$admissionNote2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="admissionNote2ToCreate{convertedBody}{subject}{reference}">'Patient/'||$createdPatient{response}{body}{id}</assign>
        <assign to="admissionNote2ToCreate{convertedBody}{customdian}{reference}">'Organization/'||$createdOrganization2{response}{body}{id}</assign>
        <assign to="admissionNote2ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/'||$createdPractitioner2{response}{body}{id}</assign>

        <log>'Converted Admission Note 2 Data'</log>
        <log>$admissionNote2ToCreate</log>

        <send id="createdAdmissionNote2" desc="Create Admission Note 2 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$admissionNote2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Admission Note 2 Data'</log>
        <log>$createdAdmissionNote2</log>

        <verify id="verifyCreateAdmissionNote2" handler="StringValidator" desc="Check that admissionNote 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdAdmissionNote2{response}{body}{type}{coding}{0}{display}</input>
            <input name="expectedstring">'Admission note'</input>
        </verify>

        <send id="documentReferenceAdmissionNote2ToCreate" desc="Convert documentReferenceAdmissionNote2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceAdmissionNote2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="documentReferenceAdmissionNote2ToCreate{convertedBody}{subject}{reference}">'Patient/' || $createdPatient{response}{body}{id}</assign>
        <assign to="documentReferenceAdmissionNote2ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/' || $createdPractitioner2{response}{body}{id}</assign>

        <log>'Converted Document Reference Admission Note 2 Data'</log>
        <log>$documentReferenceAdmissionNote2ToCreate</log>

        <send id="createdDocumentReferenceAdmissionNote2" desc="Create Document Reference Admission Note 2 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceAdmissionNote2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Second Document Reference Admission Note'</log>
        <log>$createdDocumentReferenceAdmissionNote2</log>

        <verify id="documentReferenceAdmissionNote2Creation" handler="StringValidator" desc="Check that document reference Admission Note 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdDocumentReferenceAdmissionNote2{response}{body}{content}{0}{attachment}{data}</input>
            <input name="expectedstring">$documentReferenceAdmissionNote2ToCreate{convertedBody}{content}{0}{attachment}{data}</input>
        </verify>

        <send id="operativeNote1ToCreate" desc="Convert operativeNote1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$operativeNote1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="operativeNote1ToCreate{convertedBody}{subject}{reference}">'Patient/'||$createdPatient{response}{body}{id}</assign>
        <assign to="operativeNote1ToCreate{convertedBody}{customdian}{reference}">'Organization/'||$createdOrganization1{response}{body}{id}</assign>
        <assign to="operativeNote1ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/'||$createdPractitioner1{response}{body}{id}</assign>

        <log>'Converted Operative Note 1 Data'</log>
        <log>$operativeNote1ToCreate</log>

        <send id="createdOperativeNote1" desc="Create Operative Note 1 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$operativeNote1ToCreate{convertedBody}</input>
        </send>

        <log>'Created Operative Note 1 Data'</log>
        <log>$createdOperativeNote1</log>

        <verify id="verifyCreateOperativeNote1" handler="StringValidator" desc="Check that operativeNote 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdOperativeNote1{response}{body}{type}{coding}{0}{display}</input>
            <input name="expectedstring">'Operative note'</input>
        </verify>

        <send id="documentReferenceOperativeNote1ToCreate" desc="Convert documentReferenceOperativeNote1ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceOperativeNote1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="documentReferenceOperativeNote1ToCreate{convertedBody}{subject}{reference}">'Patient/' || $createdPatient{response}{body}{id}</assign>
        <assign to="documentReferenceOperativeNote1ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/' || $createdPractitioner1{response}{body}{id}</assign>

        <log>'Converted Document Reference Operative Note 1 Data'</log>
        <log>$documentReferenceOperativeNote1ToCreate</log>

        <send id="createdDocumentReferenceOperativeNote1" desc="Create Document Reference Operative Note 1 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceOperativeNote1ToCreate{convertedBody}</input>
        </send>

        <log>'Created First Document Reference Operative Note'</log>
        <log>$createdDocumentReferenceOperativeNote1</log>

        <verify id="documentReferenceOperativeNote1Creation" handler="StringValidator" desc="Check that document reference Operative Note 1 got created successfully or not with correct data.">
            <input name="actualstring">$createdDocumentReferenceOperativeNote1{response}{body}{content}{0}{attachment}{data}</input>
            <input name="expectedstring">$documentReferenceOperativeNote1ToCreate{convertedBody}{content}{0}{attachment}{data}</input>
        </verify>

        <send id="operativeNote2ToCreate" desc="Convert operativeNote2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$operativeNote2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="operativeNote2ToCreate{convertedBody}{subject}{reference}">'Patient/'||$createdPatient{response}{body}{id}</assign>
        <assign to="operativeNote2ToCreate{convertedBody}{customdian}{reference}">'Organization/'||$createdOrganization2{response}{body}{id}</assign>
        <assign to="operativeNote2ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/'||$createdPractitioner2{response}{body}{id}</assign>

        <log>'Converted Operative Note 2 Data'</log>
        <log>$operativeNote2ToCreate</log>

        <send id="createdOperativeNote2" desc="Create Operative Note 2 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$operativeNote2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Operative Note 2 Data'</log>
        <log>$createdOperativeNote2</log>

        <verify id="verifyCreateOperativeNote2" handler="StringValidator" desc="Check that operativeNote 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdOperativeNote2{response}{body}{type}{coding}{0}{display}</input>
            <input name="expectedstring">'Operative note'</input>
        </verify>

        <send id="documentReferenceOperativeNote2ToCreate" desc="Convert documentReferenceOperativeNote2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
            handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceOperativeNote2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <assign to="documentReferenceOperativeNote2ToCreate{convertedBody}{subject}{reference}">'Patient/' || $createdPatient{response}{body}{id}</assign>
        <assign to="documentReferenceOperativeNote2ToCreate{convertedBody}{author}{0}{reference}">'Practitioner/' || $createdPractitioner2{response}{body}{id}</assign>

        <log>'Converted Document Reference Operative Note 2 Data'</log>
        <log>$documentReferenceOperativeNote2ToCreate</log>

        <send id="createdDocumentReferenceOperativeNote2" desc="Create Document Reference Operative Note 2 in FHIR server" from="ITB" to="FhirHandler"
            handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$documentReferenceOperativeNote2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Second Document Reference Operative Note'</log>
        <log>$createdDocumentReferenceOperativeNote2</log>

        <verify id="documentReferenceOperativeNote2Creation" handler="StringValidator" desc="Check that document reference Operative Note 2 got created successfully or not with correct data.">
            <input name="actualstring">$createdDocumentReferenceOperativeNote2{response}{body}{content}{0}{attachment}{data}</input>
            <input name="expectedstring">$documentReferenceOperativeNote2ToCreate{convertedBody}{content}{0}{attachment}{data}</input>
        </verify>

        <!-- TODO - Summary Search -->

       <send id="searchedPatientSummary" desc="search Patient Summary from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"summary"</input>
            <input name="fhirResourceType">'Patient'</input>
            <input name="fhirResourceId">$createdPatient{response}{body}{id}</input>
            <input name="summaryType">'FALSE'</input>
        </send>

        <log>'Searched Patient Summary'</log>
        <log>$searchedPatientSummary</log>

        <foreach desc="Loop through patient summary search bundle" counter="index" start="0" end="$searchedPatientSummary{response}{body}{total}">
            <do>
                <if desc="Check if entry has patient resource type">
                    <cond>$searchedPatientSummary{response}{body}{entry}{$index}{resourceType}='Patient'</cond>
                    <then>
                        
                        <process id="searchedPatientSummaryIdentifierSize" handler="CollectionUtils">
                            <operation>size</operation>
                            <input name="map">$searchedPatientSummary{response}{body}{entry}{$index}{identifier}</input>
                        </process>

                        <log>$searchedPatientSummaryIdentifierSize{output}</log>
                        <log>$searchedPatientSummaryIdentifierSize</log>

                        <assign to="isCorrectIdentifier">'false'</assign>
                        <assign to="endValue">number($searchedPatientSummaryIdentifierSize{output}) - 1</assign>

                        <!-- <assign to="number($searchedPatientSummaryIdentifierSize)-1">number($searchedPatientSummaryIdentifierSize{output})-1</assign> -->
                        <foreach desc="Loop through identifiers" counter="indexId" start="0" end="$endValue">
                            <do>

                                <if desc="Check if identifier system is correct">
                                    <cond>$searchedPatientSummary{response}{body}{entry}{$index}{identifier}{$indexId}{system}=$createdPatient{response}{body}{identifier}{0}{system}</cond>
                                    <then>
                                        <assign to="isCorrectIdentifier">'true'</assign>
                                    </then>
                                </if>

                            </do>
                        </foreach>

                        <verify id="verifyIdentifier" handler="StringValidator" desc="Check that if searched patient summary entry has correct identifier.">
                            <input name="actualstring">$isCorrectIdentifier</input>
                            <input name="expectedstring">'true'</input>
                        </verify>

                        <process id="searchedPatientSummaryNameSize" handler="CollectionUtils">
                            <operation>size</operation>
                            <input name="map">$searchedPatientSummary{response}{body}{entry}{$index}{name}</input>
                        </process>

                        <assign to="isCorrectFirstName">'false'</assign>
                        <assign to="isCorrectLastName">'false'</assign>
                        <assign to="endValue">number($searchedPatientSummaryNameSize{output}) - 1</assign>
                        <!-- <assign to="number($searchedPatientSummaryNameSize)-1">number($searchedPatientSummaryNameSize)-1</assign> -->
                        <foreach desc="Loop through Names" counter="indexName" start="0" end="$endValue">
                            <do>
                                <if desc="check if first name is correct">
                                    <cond>$searchedPatientSummary{response}{body}{entry}{$indexName}{name}{given}=$createdPatient{response}{body}{name}{0}{given}</cond>
                                    <then>
                                        <assign to="isCorrectFirstName">'true'</assign>
                                    </then>
                                </if>
                                <if desc="check if last name is correct">
                                    <cond>$searchedPatientSummary{response}{body}{entry}{$indexName}{name}{family}=$createdPatient{response}{body}{name}{0}{family}</cond>
                                    <then>
                                        <assign to="isCorrectLastName">'true'</assign>
                                    </then>
                                </if>
                                
                            </do>
                        </foreach>

                        <verify id="verifyFirstName" handler="StringValidator" desc="Check that if searched patient summary entry has correct first name.">
                            <input name="actualstring">$isCorrectFirstName</input>
                            <input name="expectedstring">'true'</input>
                        </verify>

                        <verify id="verifyLastName" handler="StringValidator" desc="Check that if searched patient summary entry has correct last name.">
                            <input name="actualstring">$isCorrectLastName</input>
                            <input name="expectedstring">'true'</input>
                        </verify>

                    </then>
                </if>
            </do>
        </foreach>

    </steps>

    <output>
        <success>
            <case>
                <cond>$STEP_STATUS{verifyCreatePatient} = 'ERROR'</cond>
                <message>"Patient Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCreatePractitioner1} = 'ERROR'</cond>
                <message>"Practitioner 1 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCreatePractitioner2} = 'ERROR'</cond>
                <message>"Practitioner 2 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCreateOrganization1} = 'ERROR'</cond>
                <message>"Organization 1 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyCreateOrganization2} = 'ERROR'</cond>
                <message>"Organization 2 Creation Failed"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyIdentifier} = 'ERROR'</cond>
                <message>"Idenfier did not match"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyFirstName} = 'ERROR'</cond>
                <message>"First name is not correct"</message>
            </case>
            <case>
                <cond>$STEP_STATUS{verifyLastName} = 'ERROR'</cond>
                <message>"Last name is not correct"</message>
            </case>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <default>"Test case failed."</default>
        </failure>
    </output>  
</testcase>
