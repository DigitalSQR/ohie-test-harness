<?xml version="1.0" encoding="UTF-8"?>
<testcase id="verify_patient_related_operations" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Verify patient related operations</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to verify FHIR resource patient related operations</gitb:description>
	</metadata>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
    </variables>
    <imports>
        <!-- read data from the JSON stores in name as json string-->
        <artifact type="binary" encoding="UTF-8" name="patientToCreateInJsonString">/VerifyFHIRServer/resources/PatientToCreate.json</artifact>
    </imports>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">

        <!--
            assign will stores value in variable, and it can be used as $variable_name

            right now ITB doesn't support parsing JsonString as map/array
            but it has specific type anyContent which works as map
            and we can do stuff like $variable_name{$property_name_1}{0}{$property_name_2}

            Detailed document : https://www.itb.ec.europa.eu/docs/tdl/latest/expressions/index.html#referring-to-variables
        -->
        <assign to="resourceType" type="string">'Patient'</assign>


        <!-- 
            send operation execute send method of handler (Which is written in JavaCode)
            send operation's response will get stored in id 


            Right now we have following custom handlers with following inputs:
            1. $DOMAIN{jsonStringConverterServiceAddress} - converts anyContent <-> jsonString
                1.body
                    - required 
                    - body which needs to be converted anyContent <-> jsonString                
                2.bodyType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
                    - convert body to opposite type.
            Response 
                - Structure $send_id{convertedBody}

            2. $DOMAIN{fhirContextServiceAddress} - make operations for the FHIR
                1.fhirServerBaseUrl
                    - required
                    - base URL of FHIR Server
                2.fhirVersion
                    - optional
                    - default value = R4
                    - possible value = DSTU2, DSTU3, STU3, R4, R4B, R5, Partial version strings (e.g. "3.0")
                3.connectTimeout
                    - optional
                    - deafault value = 60000 (in milliseconds)
                    - Sets the connect timeout, in milliseconds. This is the amount of time that the initial connection attempt network operation may block without failing.
                4.socketTimeout
                    - optional
                    - deafault value = 60000 (in milliseconds)
                    - Sets the socket timeout, in milliseconds. This is the SO_TIMEOUT time, which is the amount of time that a read/write network operation may block without failing.
                5.userName
                    - optional
                    - username for the basic username/password based authentication/authorization
                6.password
                    - optional
                    - password for the basic username/password based authentication/authorization
                7.token
                    - optional
                    - token for the bearer token based authentication/authorization
                8.responseType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
                9.operationType
                    - required
                    - possible value = create, update, delete, search, getById, getHistoryById, validate-code, expand, lookup,translate
                    
                extra parameters depending on operation:
                create/update:
                    1.bodyType
                        - optional
                        - default value = anyContent
                        - possible value = jsonString, anyContent
                    2.body
                        -required
                        -resource data which needs to be created/update
                search:
                    1.fhirResourceType
                        - required
                        - possible value = Patient, etc.
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -parameters as query parameters for filter
                getById/delete/getHistoryById:
                    1.fhirResourceType
                        - required
                        - possible value = Patient, etc.
                        - ResourceType of FHIR resource for which we're making operation
                    2.fhirResourceId
                        - required
                        - ID of FHIR resource for which we're making operation
                validate-code:
                    1.fhirResourceType
                        - required
                        - possible value = CodeSystem and ValueSet
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -possible parameters = url,system and code
                        -parameters to perform the operation
                 expand:
                    1.fhirResourceType
                        - required
                        - possible value = ValueSet
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -possible parameters = url
                        -parameters to perform the operation
                 lookup:
                    1.fhirResourceType
                        - required
                        - possible value = CodeSystem
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -possible parameters : system and code
                        -parameters to perform the operation
                  translate:
                    1.fhirResourceType
                        - required
                        - possible value = ConceptMap
                        - ResourceType of FHIR resource which needs to be fetched
                    2.parameters
                        -required
                        -possible parameters:url,system and code
                        -parameters to perform the operation
            Response Structure 
                - $send_id{request}{endpoint}
                - $send_id{request}{body}
                - $send_id{response}{status}
                - $send_id{response}{body}

            3. $DOMAIN{apiCallServiceAddress} - make any kind of calls
                1.httpMethod
                    - required
                    - possible value = GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS, TRACE
                    - Http Method Types
                2.url
                    - required
                    - url for the Http Request
                3.mediaType
                    -optional
                    -deafult value = application/json, etc
                    -mediaType for the Http Call
                3.body
                    -optional
                    -request body for the Http Call
                4.header
                    -optional
                    -header parameters for the Http Call
                5.responseType
                    - optional
                    - default value = anyContent
                    - possible value = jsonString, anyContent
            Response Structure 
                - $send_id{request}{endpoint}
                - $send_id{request}{body}
                - $send_id{response}{status}
                - $send_id{response}{body}


            Name - anyContentAssignServiceAddress
            Name - The address for the GITB AnyContent Assign service's WSDL definition.
            Name - http://fhir-test-services:8181/fhir/services/any-content-assign-service?wsdl
            4. $DOMAIN{anyContentAssignServiceAddress} - assign AnyContent to the AnyContent for the given path
                1.assignPath
                    - required
                    - path where we wants to assign value.
                    - example - patientToCreate{property1}{0}{property2}{property3}
                2.assignTo
                    - required
                    - anyContent in which we wants to assign another anyContent
                3.value
                    - required
                    - anyContent which we wants to assign
        -->

        <send id="patientToCreate" desc="Convert patientToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$patientToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Patient Data'</log>
        <log>$patientToCreate</log>

        <send id="createdPatient" desc="Create Patient in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"create"</input>
            <input name="body">$patientToCreate{convertedBody}</input>
        </send>

        <log>'Created Patient Data'</log>
        <log>$createdPatient</log>

        <!--
            verify data
        -->
        <verify handler="StringValidator" desc="Check that patient got created successfully or not with correct data.">
            <input name="actualstring">$createdPatient{response}{body}{birthDate}</input>
            <input name="expectedstring">'1970-01-01'</input>
        </verify>

        <assign to="createdPatient{response}{body}{birthDate}" type="string">'1999-07-25'</assign>

        <send id="updatedPatient" desc="update patient in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"update"</input>
            <input name="body">$createdPatient{response}{body}</input>
        </send>

        <log>'Updated Patient Data'</log>
        <log>$updatedPatient</log>

        <verify handler="StringValidator" desc="Check birth date got updated or not">
            <input name="actualstring">$updatedPatient{response}{body}{birthDate}</input>
            <input name="expectedstring">'1999-07-25'</input>
        </verify>


        <send id="searchedPatient" desc="search same patient from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="parameters">"name:family=Doe"</input>
        </send>
     
        <log>'Searched Patient Data'</log>
        <log>$searchedPatient</log>

        <process id="searchedPatientLinkSize" handler="CollectionUtils">
            <operation>size</operation>
            <input name="map">$searchedPatient{response}{body}{link}</input>
        </process>

        <log>"size="||$searchedPatientLinkSize{output}</log>

        <foreach desc="Iterate list" counter="index" start="0" end="$searchedPatientLinkSize{output}">
            <do>
                <log>$searchedPatient{response}{body}{link}{$index}</log>
            </do>
        </foreach>

        <send id="fetchedPatientById" desc="fetch patient by ID from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"getById"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$updatedPatient{response}{body}{id}</input>
        </send>
     
        <log>'Fetched Patient Data'</log>
        <log>$fetchedPatientById</log>

        <send id="fetchedPatientHistoryById" desc="fetch patient history by ID from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"getHistoryById"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$updatedPatient{response}{body}{id}</input>
        </send>
     
        <log>'Fetched Patient History Data'</log>
        <log>$fetchedPatientHistoryById</log>

        <send id="deleteResposeData" desc="delete patient from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="operationType">"delete"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="fhirResourceId">$updatedPatient{response}{body}{id}</input>
        </send>
     
        <log>'Delete Patient Response'</log>
        <log>$deleteResposeData</log>

    </steps>

    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <default>"Test case failed."</default>
        </failure>
    </output>  
</testcase>