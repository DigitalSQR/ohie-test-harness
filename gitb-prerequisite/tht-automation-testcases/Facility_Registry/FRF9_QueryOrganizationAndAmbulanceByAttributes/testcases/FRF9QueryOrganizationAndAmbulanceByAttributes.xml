<?xml version="1.0" encoding="UTF-8"?>
<testcase id="frf9_verify_query_organization_and_ambulance_by_attributes_operation" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/">
    <metadata>
		<gitb:name>Verify query organization and ambulance by attribute.</gitb:name>
		<gitb:type>CONFORMANCE</gitb:type>
		<gitb:version>1.0</gitb:version>
		<gitb:description>Test case to verify query organization and ambulance by attribute.</gitb:description>
	</metadata>
    <imports>
        <artifact type="binary" encoding="UTF-8" name="organization1ToCreateInJsonString">/FRF9_QueryOrganizationAndAmbulanceByAttributes/resources/OrganizationToCreate.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="organization2ToCreateInJsonString">/FRF9_QueryOrganizationAndAmbulanceByAttributes/resources/OrganizationToCreate2.json</artifact>
        <artifact type="binary" encoding="UTF-8" name="ambulance1ToCreateInJsonString">/FRF9_QueryOrganizationAndAmbulanceByAttributes/resources/AmbulanceToCreate.json</artifact>
       <artifact type="binary" encoding="UTF-8" name="ambulance2ToCreateInJsonString">/FRF9_QueryOrganizationAndAmbulanceByAttributes/resources/AmbulanceToCreate2.json</artifact>
    </imports>
    <variables>
        <var name="componentURI" type="string"/>
        <var name="username" type="string"/>
        <var name="password" type="string"/>
        <var name="loginUrl" type="string"/>
        <var name="loginType" type="string"/>
        <var name="clientSecret" type="string"/>
        <var name="clientId" type="string"/>
        <var name="headerParamName" type="string"/>
        <var name="headerParamValue" type="string"/>
    </variables>
    <actors>
		<gitb:actor id="ITB" name="ITB" role="SUT"/>
		<gitb:actor id="FhirHandler" name="FhirHandlers" role="SIMULATED"/>
	</actors>
    <steps stopOnError="true">

        <assign to="resourceType" type="string">'Organization'</assign>
        <assign to="resourceType2" type="string">'Location'</assign>

        <!-- Create new orgnization -->
        <send id="organizationToCreate" desc="Convert organizationToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send> 

        <!--
            Add log
        -->
        <log>'Converted Organization Data'</log>
        <log>$organizationToCreate</log>

         <send id="createdOrganization" desc="Create Orgnization in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$organizationToCreate{convertedBody}</input>
        </send>

        <log>'Created Organization Data'</log>
        <log>$createdOrganization</log> 

        <verify id ="verifyCreateOrganization" handler="StringValidator" desc="Verify create organization">
            <input name="actualstring">$createdOrganization{response}{body}{name}</input>
            <input name="expectedstring">"Richard Hospital"</input>
        </verify>


        <!-- // Create another organization with same name -->
        <send id="organization2ToCreate" desc="Convert organization2ToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Organization 2 Data'</log>
        <log>$organization2ToCreate</log>

        <send id="createdOrganization2" desc="Create Patient in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$organization2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Organization 2 Data'</log>
        <log>$createdOrganization2</log>

        <verify id="verifyCreateAnotherOrganization" handler="StringValidator" desc="Verify create another organization">
            <input name="actualstring">$createdOrganization2{response}{body}{name}</input>
            <input name="expectedstring">"Burgers University Medical Center"</input>
        </verify>


         <!--
            Verify searching organization by id
        -->
 
        <send id="searchedOrgnization1" desc="Search organization by city from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="parameters">"_id=" || $createdOrganization2{response}{body}{id}</input>
        </send>
     
        <log>'Searched Orgnization Data by id'</log>
        <log>$searchedOrgnization1</log>

        <verify id="verifySearchedOrgnizationById" handler="StringValidator" desc="Verify search organization by id">
            <input name="actualstring">$searchedOrgnization1{response}{body}{total}</input>
            <input name="expectedstring">1</input>
        </verify>



         <!--
            Verify searching organization by name and id 
        -->
 
        <send id="searchedOrgnization2" desc="Search organization by name from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">$resourceType</input>
            <input name="parameters">"name=Burgers%20University%20Medical%20Center&amp;_id=" || $createdOrganization2{response}{body}{id}</input>
        </send>
     
        <log>'Searched Orgnization Data by name'</log>
        <log>$searchedOrgnization2</log>

        <verify id="verifySearchedOrgnizationByName" handler="StringValidator" desc="Verify search organization by name">
            <input name="actualstring">$searchedOrgnization2{response}{body}{total}</input>
            <input name="expectedstring">1</input>
        </verify>


        <!-- Create new ambulance -->
        <send id="ambulanceToCreate" desc="Convert ambulanceToCreate jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$ambulance1ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Ambulance Data'</log>
        <log>$ambulanceToCreate</log>

        <send id="createdAmbulance" desc="Create Ambulance in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$ambulanceToCreate{convertedBody}</input>
        </send>

        <log>'Created Ambulance Data'</log>
        <log>$createdAmbulance</log>

        <verify id ="verifyCreateAmbulance" handler="StringValidator" desc="Verify create ambulance">
            <input name="actualstring">$createdAmbulance{response}{body}{name}</input>
            <input name="expectedstring">"BUMC"</input>
        </verify>

        <!-- // Create another ambulance with same type -->
        <send id="ambulance2ToCreate" desc="Convert ambulanceTo2Create jsonString => anyContent" from="ITB" to="FhirHandler"
                handler="$DOMAIN{jsonStringConverterServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$ambulance2ToCreateInJsonString</input>
            <input name="bodyType">"jsonString"</input>
        </send>

        <!--
            Add log
        -->
        <log>'Converted Ambulance 2 Data'</log>
        <log>$ambulance2ToCreate</log>

        <send id="createdAmbulance2" desc="Create Ambulance in FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"create"</input>
            <input name="body">$ambulance2ToCreate{convertedBody}</input>
        </send>

        <log>'Created Ambulance 2 Data'</log>
        <log>$createdAmbulance2</log>

        <verify id="verifyCreateAnotherAmbulance" handler="StringValidator" desc="Verify create another ambulance">
            <input name="actualstring">$createdAmbulance2{response}{body}{name}</input>
            <input name="expectedstring">"RM"</input>
        </verify>

        <!--
            Verify searching ambulance by type
        -->

        <send id="searchedAmbulance1" desc="Search ambulance by type from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">$resourceType2</input>
            <input name="parameters">"type=AMB&amp;_id=" || $createdAmbulance{response}{body}{id}</input>
        </send>
     
        <log>'Searched Ambulance Data by type'</log>
        <log>$searchedAmbulance1</log>

        <verify id ="verifySearchAmbulanceByType" handler="StringValidator" desc="Verify search ambulance by type">
            <input name="actualstring">$searchedAmbulance1{response}{body}{total}</input>
            <input name="expectedstring">1</input>
        </verify>



        <!--
            Verify searching ambulance by status and name
        -->

        <send id="searchedAmbulance2" desc="Search ambulance by status from the FHIR server" from="ITB" to="FhirHandler"
                handler="$DOMAIN{fhirContextServiceAddress}">
            <input name="fhirServerBaseUrl">$componentURI</input>
            <input name="username">$username</input>
            <input name="password">$password</input>
            <input name="loginUrl">$loginUrl</input>
            <input name="loginType">$loginType</input>
            <input name="clientSecret">$clientSecret</input>
            <input name="clientId">$clientId</input>
            <input name="headerParamName">$headerParamName</input>
            <input name="headerParamValue">$headerParamValue</input>
            <input name="operationType">"search"</input>
            <input name="fhirResourceType">$resourceType2</input>
            <input name="parameters">"status=suspended&amp;name=RM&amp;_id=" || $createdAmbulance2{response}{body}{id}</input>
        </send>
     
        <log>'Searched Ambulance Data by status and name'</log>
        <log>$searchedAmbulance2</log>

        <verify id="verifySearchAmbulanceByNameAndStatus" handler="StringValidator" desc="Verify search ambulance by status and name">
            <input name="actualstring">$searchedAmbulance2{response}{body}{total}</input>
            <input name="expectedstring">1</input>
        </verify>
    </steps>

    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <case>
                <cond>$STEP_STATUS{verifyCreateOrganization} = 'ERROR'</cond>
                <message>"The first organization was not successfully created."</message>
            </case>        
            <case>
                <cond>$STEP_STATUS{verifyCreateAnotherOrganization} = 'ERROR'</cond>
                <message>"The second organization was not successfully created."</message>
            </case>      
            <case>
                <cond>$STEP_STATUS{verifySearchedOrgnizationById} = 'ERROR'</cond>
                <message>"Search operation for the organization by id is failed."</message>
            </case> 
            <case>
                <cond>$STEP_STATUS{verifySearchedOrgnizationByName} = 'ERROR'</cond>
                <message>"Search operation for the organization by name is failed."</message>
            </case>  
            <case>
                <cond>$STEP_STATUS{verifyCreateAmbulance} = 'ERROR'</cond>
                <message>"The first ambulance was not successfully created."</message>
            </case>        
            <case>
                <cond>$STEP_STATUS{verifyCreateAnotherAmbulance} = 'ERROR'</cond>
                <message>"The second ambulance was not successfully created."</message>
            </case>     
            <case>
                <cond>$STEP_STATUS{verifySearchAmbulanceByType} = 'ERROR'</cond>
                <message>"Search operation for the ambulance by type is failed."</message>
            </case>      
            <case>
                <cond>$STEP_STATUS{verifySearchAmbulanceByNameAndStatus} = 'ERROR'</cond>
                <message>"Search operation for the ambulance by status and name is failed."</message>
            </case>     
            <default>"Test case failed. Please check the failed step's report for more information and the test log."</default>
        </failure>
    </output>  
</testcase>
